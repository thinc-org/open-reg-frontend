{
  "openapi": "3.0.0",
  "info": {
    "title": "Open Registration API",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateOrganizationDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "members", "events"]
      },
      "OrganizationMember": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["userID", "permissions"]
      },
      "AddMemberDTO": {
        "type": "object",
        "properties": {
          "memberid": {
            "type": "string"
          }
        },
        "required": ["memberid"]
      },
      "Event": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "organizationID": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "description", "organizationID", "tags"]
      },
      "CreateEventDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "organizationID": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "description", "organizationID", "tags"]
      },
      "SetTagsDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["tags"]
      },
      "InternationalizedStringDTO": {
        "type": "object",
        "properties": {
          "th": {
            "type": "string"
          },
          "en": {
            "type": "string"
          }
        },
        "required": ["th", "en"]
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "firstName": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "lastName": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["title", "firstName", "lastName", "dateOfBirth", "email", "password"]
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "firstName": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "lastName": {
            "$ref": "#/components/schemas/InternationalizedStringDTO"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "termsOfService": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "title",
          "firstName",
          "lastName",
          "dateOfBirth",
          "email",
          "password",
          "termsOfService",
          "organizations"
        ]
      },
      "AuthSignInDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": ["accessToken"]
      }
    }
  },
  "paths": {
    "/organization": {
      "post": {
        "operationId": "OrganizationController_createOrganization",
        "summary": "Create an organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "get": {
        "operationId": "OrganizationController_findAll",
        "summary": "List all organizations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      }
    },
    "/organization/{id}/member": {
      "get": {
        "operationId": "OrganizationController_getMembers",
        "summary": "List all members in an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationMember"
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "OrganizationController_addMember",
        "summary": "Add a user to an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationMember"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid body or user with memberid doesn't exist"
          },
          "404": {
            "description": ""
          },
          "409": {
            "description": "User is already a member"
          }
        },
        "tags": ["api"]
      }
    },
    "/organization/{id}/member/{memberid}": {
      "delete": {
        "operationId": "OrganizationController_removeMember",
        "summary": "Remove a user from an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationMember"
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    },
    "/event": {
      "get": {
        "operationId": "EventController_findAll",
        "summary": "List all events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "EventController_createEvent",
        "summary": "Create an event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    },
    "/event/{id}": {
      "get": {
        "operationId": "EventController_findById",
        "summary": "Find an event from ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    },
    "/event/{id}/tags": {
      "get": {
        "operationId": "EventController_findAllTags",
        "summary": "List tags of an event",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "EventController_setTags",
        "summary": "Set tags of an event",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTagsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    },
    "/user": {
      "post": {
        "operationId": "UserController_create",
        "summary": "Create a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "409": {
            "description": "Email already used"
          }
        },
        "tags": ["api"]
      },
      "get": {
        "operationId": "UserController_findAll",
        "summary": "List all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findById",
        "summary": "Find a user from ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    },
    "/auth/sign-in": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Sign in",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignInDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          }
        },
        "tags": ["api"]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_currentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      }
    }
  }
}
